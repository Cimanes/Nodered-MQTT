[
    {
        "id": "4626f4eca8ae462b",
        "type": "tab",
        "label": "BME MQTT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7b0e3269a6233dda",
        "type": "group",
        "z": "4626f4eca8ae462b",
        "name": "Console (GPIO's and Thermostat)",
        "style": {
            "label": true,
            "color": "#a4a4a4",
            "fill": "#000000",
            "stroke": "#7f7f7f"
        },
        "nodes": [
            "a7c3a74e711d2061",
            "b8c346de5967093e",
            "e7484c10d18a08e0",
            "0fc1aea9f3405373",
            "2f149303cc7a4594",
            "1db3d67dd222a70a",
            "b56b0a394afb449e",
            "cc7b1e9ae57a305a",
            "e65f6f58f7f0898a",
            "8b4b7cc838b9e2da",
            "1dcf111b2594c8bd",
            "9021d18f82f4ac42",
            "79c47b6764732b12",
            "b1939cd3dce59041",
            "64c60beb8a3f6758",
            "4f3ec602bbdddf02",
            "d527ab69da44aabb",
            "bf2956fd00171c01",
            "74a3395dbb676672",
            "f3a98ea92ce2c2a0",
            "c6288db953c65643",
            "9408664605020b12",
            "e1d37be25fd797d6",
            "d38bb5ca96205a0d",
            "84817230c046ae3e",
            "f59cf411d22a7ecd",
            "bdc371ca838b5cc3",
            "6fba658056823632",
            "9d2ce34f03259bbf",
            "10db6128cb5e255a",
            "7d9bb908da0322fb",
            "bf699921c67c5efe",
            "35633ed2c71b93f1",
            "0fab20d54678aa7a",
            "d16999edcbece664",
            "5edec3db1778913c",
            "12022de2a2018bda",
            "10e898ec405b580b",
            "3deaed82819befab",
            "a2e851899c0ee76d",
            "0062bdac845f9a42",
            "58be6794a184cba2",
            "6ae75497c6b7045c",
            "42457aa4ad095f87",
            "42e0f40e6b94bfcf",
            "9511a550b937db64",
            "50888997091a3ccf",
            "9b27c9f2292fd667",
            "268c398ce7d2aedc",
            "1ce6790e56252c04",
            "818252558bc7c823",
            "b6de17e1a7f1e628",
            "44e80559e2fe8234",
            "a443770a02d49986",
            "ba5383a6dca4fb57",
            "8d829409618a2baf"
        ],
        "x": 14,
        "y": 699,
        "w": 1352,
        "h": 1062
    },
    {
        "id": "21a58cbb662a2d77",
        "type": "group",
        "z": "4626f4eca8ae462b",
        "name": "BME Readings",
        "style": {
            "label": true,
            "color": "#a4a4a4",
            "fill": "#000000",
            "stroke": "#7f7f7f"
        },
        "nodes": [
            "a106edce8b444678",
            "94f7ce855f618ec2",
            "0f52cdb46632449a",
            "16e2c7310b4459b7",
            "d2758600007a22ac",
            "4c21656d105d9a41",
            "cff10c52f99ba578",
            "cce5b66e0055a7e1",
            "329c5f5460d2b106",
            "efc8cfa8423166c2",
            "9a848e28c93fdcd4",
            "4d97fce4043366db",
            "4df5c692eaf2da97",
            "e6f1b0fc7afb22ec",
            "76c012af80871a66",
            "78060369fb44c72e",
            "ddd8aacba84f2c47",
            "e5392c00b88c559c",
            "268cd292df4a3b56",
            "b00cde6cefb1fc71",
            "c5665979c6b6fa4b",
            "2212016ba68b6d87",
            "f0ac8ab08c66448a",
            "357e6bb2f6c96d8e",
            "4083458ef90c25ae",
            "baf99f2287f0dbb0",
            "b18baec54d569ee2"
        ],
        "x": 14,
        "y": 79,
        "w": 992,
        "h": 522
    },
    {
        "id": "76c012af80871a66",
        "type": "junction",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "x": 540,
        "y": 520,
        "wires": [
            [
                "94f7ce855f618ec2",
                "b18baec54d569ee2"
            ]
        ]
    },
    {
        "id": "a106edce8b444678",
        "type": "ui-chart",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "group": "9fb18d31c60ab4b8",
        "name": "chart Hum",
        "label": "RH (%)",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "10",
        "ymax": "90",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "false",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#33aa33",
            "#ff0000",
            "#ff7f0e",
            "#51a5e6",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 6,
        "className": "col1",
        "interpolation": "linear",
        "x": 770,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "94f7ce855f618ec2",
        "type": "ui-chart",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "group": "32d4771e3f2730dd",
        "name": "chart Temp",
        "label": "Temp (ÂºC)",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "0",
        "ymax": "35",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "false",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": "3",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#a51818",
            "#2c99dd",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 6,
        "className": "",
        "interpolation": "linear",
        "x": 770,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "0f52cdb46632449a",
        "type": "ui-chart",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "group": "4bad576b391920a8",
        "name": "chart SLP",
        "label": "SL Press (mbar)",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "970",
        "ymax": "1030",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "false",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#50a0e6",
            "#ff0000",
            "#ff7f0e",
            "#51a578",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 6,
        "className": "col1",
        "interpolation": "linear",
        "x": 760,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "16e2c7310b4459b7",
        "type": "function",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "func. Temp",
        "func": "msg.payload = [\n    { temperature: Number (msg.payload)/10},\n    {   sensor: \"BME280\",\n        device: \"ESP8266\",\n        room: \"office\"\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 460,
        "wires": [
            [
                "d2758600007a22ac"
            ]
        ]
    },
    {
        "id": "d2758600007a22ac",
        "type": "influxdb out",
        "z": "4626f4eca8ae462b",
        "d": true,
        "g": "21a58cbb662a2d77",
        "influxdb": "bcbfe66660dcf8c7",
        "name": "influx Temp",
        "measurement": "meteo",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "Cimanes",
        "bucket": "Pi01",
        "x": 770,
        "y": 460,
        "wires": []
    },
    {
        "id": "4c21656d105d9a41",
        "type": "influxdb out",
        "z": "4626f4eca8ae462b",
        "d": true,
        "g": "21a58cbb662a2d77",
        "influxdb": "bcbfe66660dcf8c7",
        "name": "influx Press",
        "measurement": "meteo",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "Cimanes",
        "bucket": "Pi01",
        "x": 770,
        "y": 280,
        "wires": []
    },
    {
        "id": "cff10c52f99ba578",
        "type": "function",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "func. RH",
        "func": "msg.payload = [\n    { humidity: Number (msg.payload) /10 },\n    {   sensor: \"BME280\",\n        device: \"ESP8266\",\n        room: \"office\"\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 140,
        "wires": [
            [
                "cce5b66e0055a7e1"
            ]
        ]
    },
    {
        "id": "cce5b66e0055a7e1",
        "type": "influxdb out",
        "z": "4626f4eca8ae462b",
        "d": true,
        "g": "21a58cbb662a2d77",
        "influxdb": "bcbfe66660dcf8c7",
        "name": "influx RH",
        "measurement": "meteo",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "Cimanes",
        "bucket": "Pi01",
        "x": 920,
        "y": 140,
        "wires": []
    },
    {
        "id": "79c47b6764732b12",
        "type": "ui-number-input",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "group": "73528bb91092cced",
        "name": "BME Interval",
        "label": "interval (s)",
        "order": 6,
        "width": 2,
        "height": 0,
        "topic": "topic",
        "topicType": "msg",
        "min": "10",
        "max": "900",
        "step": "10",
        "tooltip": "",
        "passthru": true,
        "sendOnBlur": false,
        "sendOnEnter": false,
        "className": "",
        "clearable": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "spinner": "default",
        "x": 330,
        "y": 860,
        "wires": [
            [
                "b1939cd3dce59041"
            ]
        ]
    },
    {
        "id": "b1939cd3dce59041",
        "type": "mqtt out",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "bme/interval",
        "topic": "bme/interval",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f9e276987b2fb1f",
        "x": 510,
        "y": 860,
        "wires": []
    },
    {
        "id": "91813f95d282a508",
        "type": "comment",
        "z": "4626f4eca8ae462b",
        "name": "Node-red remote",
        "info": "Server for \"Node-red Remote\" app",
        "x": 80,
        "y": 20,
        "wires": []
    },
    {
        "id": "329c5f5460d2b106",
        "type": "comment",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "Description",
        "info": "Receive BME readings via MQTT protocol\nTemperature, pressure and Rel. Humidity.\nFor each variable:\n- Display value in a gaugge.\n- Record a chart trend.\n- Send to Influx Data Base.\n- Send to the Debug console.\n\n",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "a7c3a74e711d2061",
        "type": "mqtt out",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "gpio/2",
        "topic": "gpio/2",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f9e276987b2fb1f",
        "x": 530,
        "y": 1080,
        "wires": []
    },
    {
        "id": "b8c346de5967093e",
        "type": "ui-switch",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "ESP LED",
        "label": "LED",
        "group": "6802e7f370cd4a31",
        "order": 1,
        "width": 2,
        "height": 0,
        "passthru": true,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-left",
        "clickableArea": "switch",
        "onvalue": "0",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "1",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "x": 320,
        "y": 1080,
        "wires": [
            [
                "a7c3a74e711d2061"
            ]
        ]
    },
    {
        "id": "e7484c10d18a08e0",
        "type": "mqtt out",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "gpio/13",
        "topic": "gpio/13",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f9e276987b2fb1f",
        "x": 520,
        "y": 1020,
        "wires": []
    },
    {
        "id": "0fc1aea9f3405373",
        "type": "ui-switch",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Boiler",
        "label": "Boiler",
        "group": "eea751cd59c30bc9",
        "order": 3,
        "width": 1,
        "height": 0,
        "passthru": true,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-left",
        "clickableArea": "switch",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "x": 330,
        "y": 1020,
        "wires": [
            [
                "e7484c10d18a08e0"
            ]
        ]
    },
    {
        "id": "2f149303cc7a4594",
        "type": "mqtt out",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "gpio/15",
        "topic": "gpio/15",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f9e276987b2fb1f",
        "x": 760,
        "y": 940,
        "wires": []
    },
    {
        "id": "1db3d67dd222a70a",
        "type": "comment",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Description",
        "info": "Thermostat:\nGet flow variable Temp and compare with \nsetpoint. Switch heater ON/OFF.\nDeadband is adjustable.\n\nGPIO Controls:\nSwitches to control ESP digital outputs.\nSignals sent via MQTT protocol to ESP device.\nThe topic is: esp/digital/xx\n\"xx\" is the GPIO number\nThe ESP will identify this number.",
        "x": 100,
        "y": 800,
        "wires": []
    },
    {
        "id": "b56b0a394afb449e",
        "type": "ui-slider",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "group": "eea751cd59c30bc9",
        "name": "Thermostat",
        "label": "Thermostat",
        "tooltip": "",
        "order": 4,
        "width": 5,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "thermostat",
        "topicType": "str",
        "thumbLabel": "true",
        "showTicks": "true",
        "min": "35",
        "max": "5",
        "step": "0.5",
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "showTextField": true,
        "x": 350,
        "y": 920,
        "wires": [
            [
                "bf2956fd00171c01",
                "c6288db953c65643"
            ]
        ]
    },
    {
        "id": "cc7b1e9ae57a305a",
        "type": "ui-number-input",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "group": "eea751cd59c30bc9",
        "name": "Input Deadband",
        "label": "Deadband",
        "order": 6,
        "width": 1,
        "height": 0,
        "topic": "deadband",
        "topicType": "str",
        "min": "0.1",
        "max": "2",
        "step": "0.1",
        "tooltip": "Thermostat deadband",
        "passthru": false,
        "sendOnBlur": false,
        "sendOnEnter": false,
        "className": "",
        "clearable": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "spinner": "default",
        "x": 340,
        "y": 960,
        "wires": [
            [
                "bf2956fd00171c01"
            ]
        ]
    },
    {
        "id": "e65f6f58f7f0898a",
        "type": "inject",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Init. Deadband",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "0.5",
        "payloadType": "num",
        "x": 160,
        "y": 960,
        "wires": [
            [
                "cc7b1e9ae57a305a"
            ]
        ]
    },
    {
        "id": "8b4b7cc838b9e2da",
        "type": "inject",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Init. Thermostat",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "esp/control/setpoint",
        "payload": "19",
        "payloadType": "num",
        "x": 160,
        "y": 920,
        "wires": [
            [
                "b56b0a394afb449e"
            ]
        ]
    },
    {
        "id": "64c60beb8a3f6758",
        "type": "inject",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Init. Interval",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "esp/control/interval",
        "payload": "900",
        "payloadType": "num",
        "x": 150,
        "y": 860,
        "wires": [
            [
                "79c47b6764732b12"
            ]
        ]
    },
    {
        "id": "1dcf111b2594c8bd",
        "type": "ui-button",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "group": "eea751cd59c30bc9",
        "name": "BME Read",
        "label": "Trigger",
        "order": 7,
        "width": 2,
        "height": 0,
        "emulateClick": true,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 350,
        "y": 800,
        "wires": [
            [
                "d527ab69da44aabb"
            ]
        ]
    },
    {
        "id": "4f3ec602bbdddf02",
        "type": "mqtt out",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "esp/debug",
        "topic": "esp/debug",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f9e276987b2fb1f",
        "x": 510,
        "y": 1160,
        "wires": []
    },
    {
        "id": "9021d18f82f4ac42",
        "type": "ui-switch",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "ESP Debug",
        "label": "Debug",
        "group": "6802e7f370cd4a31",
        "order": 3,
        "width": 2,
        "height": 0,
        "passthru": true,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "switch",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "x": 330,
        "y": 1160,
        "wires": [
            [
                "4f3ec602bbdddf02"
            ]
        ]
    },
    {
        "id": "d527ab69da44aabb",
        "type": "mqtt out",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "bme/read",
        "topic": "bme/read",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f9e276987b2fb1f",
        "x": 500,
        "y": 800,
        "wires": []
    },
    {
        "id": "efc8cfa8423166c2",
        "type": "change",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "Reading time",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$moment().format(\"DD/MM HH:mm:ss\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 440,
        "wires": [
            [
                "9a848e28c93fdcd4",
                "357e6bb2f6c96d8e"
            ]
        ]
    },
    {
        "id": "9a848e28c93fdcd4",
        "type": "ui-text",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "group": "73528bb91092cced",
        "order": 7,
        "width": 2,
        "height": 0,
        "name": "Last reading",
        "label": "Last reading:  ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 370,
        "y": 440,
        "wires": []
    },
    {
        "id": "1ef320855f8a59b4",
        "type": "remote-access",
        "z": "4626f4eca8ae462b",
        "confignode": "deda685155339a23",
        "name": "Nodered UI",
        "verbose": 0,
        "x": 300,
        "y": 20,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4d97fce4043366db",
        "type": "function",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "func. Press",
        "func": "msg.payload = [\n    { pressure: Number (msg.payload) /10 },\n    {\n        sensor: \"BME280\",\n        device: \"ESP8266\",\n        room: \"office\"\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 280,
        "wires": [
            [
                "4c21656d105d9a41"
            ]
        ]
    },
    {
        "id": "4df5c692eaf2da97",
        "type": "link out",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "temp out",
        "mode": "link",
        "links": [
            "74a3395dbb676672"
        ],
        "x": 485,
        "y": 560,
        "wires": []
    },
    {
        "id": "bf2956fd00171c01",
        "type": "function",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "func. thermostat",
        "func": "// The msg received can be ot the types:\n//  {\"payload\": 20, \"topic\": \"thermostat\"}\n//  {\"payload\": 0.3, \"topic\": \"deadband\"}\n//  {\"payload\": 21.4, \"topic\": \"temp\"}\n// The topic is the name of the flow-scoped variable.\n// The payload is the new value for that variable\n\n// Update the received variable (\"deadband\" / \"temp\" / \"thermostat\") in the context scope: :\ncontext.set(msg.topic, msg.payload);\n\n// Calculate the heater output and assign it to msg.payload\nconst T = flow.get(\"temp\"),\n    DB = context.get(\"deadband\"),\n    Setpoint = context.get(\"thermostat\"),\n    Heater = Setpoint > T + DB ? 1 : 0;\n\n// No output if heater\" condition does not change.\nif (context.get(\"heater\") == Heater) { return };\n\n// let newMsg=[];\n// newMsg.payload = Heater;\n// newMsg.topic = \"heater\";\n// newMsg.db = DB;\n// newMsg.temp = T;\n// newMsg.setpoint = Setpoint;\n// If \"heater\" state changes update context and msg; \n// Send msg with topic=\"heater\" and correspondign payload.\ncontext.set(\"heater\", Heater);\nreturn { payload: Heater, topic: \"heater\" }\n// return newMsg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 940,
        "wires": [
            [
                "2f149303cc7a4594"
            ]
        ]
    },
    {
        "id": "74a3395dbb676672",
        "type": "link in",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "temp in",
        "links": [
            "4df5c692eaf2da97"
        ],
        "x": 455,
        "y": 740,
        "wires": [
            [
                "f3a98ea92ce2c2a0"
            ]
        ]
    },
    {
        "id": "e6f1b0fc7afb22ec",
        "type": "link in",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "thermostat in",
        "links": [
            "c6288db953c65643"
        ],
        "x": 655,
        "y": 560,
        "wires": [
            [
                "94f7ce855f618ec2"
            ]
        ]
    },
    {
        "id": "f3a98ea92ce2c2a0",
        "type": "ui-text",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "group": "eea751cd59c30bc9",
        "order": 5,
        "width": 2,
        "height": 0,
        "name": "Temperature",
        "label": "Temperature: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 570,
        "y": 740,
        "wires": []
    },
    {
        "id": "c6288db953c65643",
        "type": "link out",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "thermostat out",
        "mode": "link",
        "links": [
            "e6f1b0fc7afb22ec"
        ],
        "x": 665,
        "y": 900,
        "wires": []
    },
    {
        "id": "78060369fb44c72e",
        "type": "debug",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "mqtt in",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 380,
        "wires": []
    },
    {
        "id": "ddd8aacba84f2c47",
        "type": "function",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "Get BME Readings",
        "func": "let msgHum = null, \n    msgPres = null,\n    msgSLP = null,\n    msgTemp = null, \n    msgTime = null;\n\n// Update variables with topic in context (elevation):\nif (msg.topic == \"elevation\") { context.set(\"elevation\", msg.payload); }\n\n// Update BME readings (msg received with no topic):\nelse { \n    const obj = JSON.parse(msg.payload);\n    msgTemp = { payload: obj.temp / 10, topic: \"temp\" };\n    msgHum = { payload: obj.hum / 10 };\n    msgPres = { payload: obj.pres / 10 };\n    msgTime = { payload: new Date().toLocaleString(\"es-ES\") };\n\n    flow.set(\"temp\", obj.temp / 10);\n    context.set(\"pres\", obj.pres / 10);\n}\n\nlet T = flow.get(\"temp\");\nconst P = context.get(\"pres\");\nconst H = context.get(\"elevation\");\nif (T === undefined || P === undefined || H === undefined) {\n    node.warn(\"Missing required inputs. Waiting for all inputs to be available.\");\n    return null; // Don't compute until all data is available\n}\n\n// Calculation of Sea Level Pressure:\n// T = Temperature at station(in K â Kelvin)\n// L = Temperature lapse rate â 0.0065 K / m\n// g = Gravitational acceleration â 9.80665 m / sÂ²\n// M = Molar mass of dry air â 0.0289644 kg / mol\n// R = Universal gas constant â 8.31432 NÂ·m / (molÂ·K)\n// exp = -(g * M)/(R * L)\n\nT += 273.15;\nconst L = 0.0065,\n    exp = -5.257;\n\nmsgSLP = { payload: Math.round(P * Math.pow(T / (T + (L * H)), exp)) }\n\nreturn [ msgHum, msgSLP, msgPres, msgTime, msgTemp ];",
        "outputs": 5,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 300,
        "wires": [
            [
                "cff10c52f99ba578",
                "a106edce8b444678",
                "baf99f2287f0dbb0"
            ],
            [
                "0f52cdb46632449a",
                "4d97fce4043366db",
                "4083458ef90c25ae"
            ],
            [
                "c5665979c6b6fa4b"
            ],
            [
                "16e2c7310b4459b7"
            ],
            [
                "76c012af80871a66",
                "4df5c692eaf2da97"
            ]
        ]
    },
    {
        "id": "e5392c00b88c559c",
        "type": "mqtt in",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "bme",
        "topic": "bme",
        "qos": "2",
        "datatype": "auto",
        "broker": "9f9e276987b2fb1f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 300,
        "wires": [
            [
                "ddd8aacba84f2c47",
                "efc8cfa8423166c2",
                "78060369fb44c72e"
            ]
        ]
    },
    {
        "id": "268cd292df4a3b56",
        "type": "ui-number-input",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "group": "73528bb91092cced",
        "name": "elevation",
        "label": "Elevation",
        "order": 5,
        "width": 2,
        "height": 0,
        "topic": "elevation",
        "topicType": "str",
        "min": "0",
        "max": "5000",
        "step": "10",
        "tooltip": "Toledo: 529m / Cimanes: 903m",
        "passthru": true,
        "sendOnBlur": false,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "spinner": "default",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "ddd8aacba84f2c47"
            ]
        ]
    },
    {
        "id": "b00cde6cefb1fc71",
        "type": "inject",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "Init Elevation",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "529",
        "payloadType": "num",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "268cd292df4a3b56"
            ]
        ]
    },
    {
        "id": "c5665979c6b6fa4b",
        "type": "ui-text",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "group": "73528bb91092cced",
        "order": 1,
        "width": 2,
        "height": 0,
        "name": "Pres",
        "label": "Pres. reading (mbar): ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 750,
        "y": 400,
        "wires": []
    },
    {
        "id": "357e6bb2f6c96d8e",
        "type": "ui-text",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "group": "eea751cd59c30bc9",
        "order": 2,
        "width": 2,
        "height": 0,
        "name": "Last read",
        "label": "Last reading:  ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 360,
        "y": 480,
        "wires": []
    },
    {
        "id": "9408664605020b12",
        "type": "mqtt in",
        "z": "4626f4eca8ae462b",
        "d": true,
        "g": "7b0e3269a6233dda",
        "name": "fb/led",
        "topic": "fb/led",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9f9e276987b2fb1f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 650,
        "y": 1500,
        "wires": [
            [
                "e1d37be25fd797d6"
            ]
        ]
    },
    {
        "id": "e1d37be25fd797d6",
        "type": "function",
        "z": "4626f4eca8ae462b",
        "d": true,
        "g": "7b0e3269a6233dda",
        "name": "Get GPIO Fdback",
        "func": "const topicMap = {\n    \"fb/interval\": 0,\n    heater: 1,\n    boiler: 2,\n    debug: 3,\n    led: 4,\n    \"fb/espIP\": 5,\n    wifi: 6,\n    \"\": 7\n};\n\nlet result = Array(8).fill(null);\nif (topicMap.hasOwnProperty(msg.topic)) {\n    result[topicMap[msg.topic]] = msg;\n}\nreturn result;\n\n\n// let result = Array(8).fill(null);\n// switch (msg.topic) {\n//     case \"interval\":    result[0] = msg; break;\n//     case \"heater\":      result[1] = msg; break;\n//     case \"boiler\":      result[2] = msg; break;\n//     case \"debug\":       result[3] = msg; break;\n//     case \"led\":         result[4] = msg; break;\n//     case \"espIP\":       result[5] = msg; break;\n//     case \"wifi\":        result[6] = msg;\n//         msg.payload = '<div style=\"color: #065f46; background-color: #2e2; padding: 2rem; border-radius: 0.375rem;\">â Wifi Cleared. Reboot ESP</div>';\n//         break;\n//     default: result[7] = msg;;\n//         msg.payload = \"ws failed\";\n// }\n// return result;",
        "outputs": 8,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1460,
        "wires": [
            [
                "0fab20d54678aa7a"
            ],
            [
                "35633ed2c71b93f1"
            ],
            [
                "10db6128cb5e255a"
            ],
            [
                "bf699921c67c5efe"
            ],
            [
                "7d9bb908da0322fb"
            ],
            [
                "d16999edcbece664"
            ],
            [
                "5edec3db1778913c"
            ],
            [
                "9d2ce34f03259bbf"
            ]
        ]
    },
    {
        "id": "d38bb5ca96205a0d",
        "type": "ui-button",
        "z": "4626f4eca8ae462b",
        "d": true,
        "g": "7b0e3269a6233dda",
        "group": "6802e7f370cd4a31",
        "name": "Reboot ESP",
        "label": "Reboot ESP",
        "order": 4,
        "width": 2,
        "height": 0,
        "emulateClick": true,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "esp/reboot",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "1",
        "pointerupPayloadType": "str",
        "x": 150,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "84817230c046ae3e",
        "type": "ui-button",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "group": "6802e7f370cd4a31",
        "name": "get ESP IP",
        "label": "get ESP IP",
        "order": 5,
        "width": 2,
        "height": 0,
        "emulateClick": true,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "espIP",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 310,
        "y": 1280,
        "wires": [
            [
                "bdc371ca838b5cc3"
            ]
        ]
    },
    {
        "id": "f59cf411d22a7ecd",
        "type": "ui-button",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "group": "ddb6dd5038edb54e",
        "name": "Reset Wifi",
        "label": "Reset Wifi",
        "order": 3,
        "width": 2,
        "height": 0,
        "emulateClick": true,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "wifi",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 310,
        "y": 1340,
        "wires": [
            [
                "6fba658056823632"
            ]
        ]
    },
    {
        "id": "bdc371ca838b5cc3",
        "type": "mqtt out",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "esp/espIP",
        "topic": "esp/espIP",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f9e276987b2fb1f",
        "x": 520,
        "y": 1280,
        "wires": []
    },
    {
        "id": "6fba658056823632",
        "type": "mqtt out",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "esp/wifi",
        "topic": "esp/wifi",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f9e276987b2fb1f",
        "x": 520,
        "y": 1340,
        "wires": []
    },
    {
        "id": "9d2ce34f03259bbf",
        "type": "debug",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "ws failed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1220,
        "wires": []
    },
    {
        "id": "10db6128cb5e255a",
        "type": "ui-led",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Boiler Led",
        "group": "1f360b16b32ec829",
        "order": 4,
        "width": 2,
        "height": "1",
        "label": "Boiler",
        "labelPlacement": "right",
        "labelAlignment": "flex-start",
        "states": [
            {
                "value": "1",
                "valueType": "str",
                "color": "#0a5a78"
            },
            {
                "value": "0",
                "valueType": "str",
                "color": "#575757"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showBorder": false,
        "showGlow": false,
        "x": 1080,
        "y": 1020,
        "wires": []
    },
    {
        "id": "7d9bb908da0322fb",
        "type": "ui-led",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "LED Led",
        "group": "1f360b16b32ec829",
        "order": 3,
        "width": 2,
        "height": 0,
        "label": "Led",
        "labelPlacement": "right",
        "labelAlignment": "flex-start",
        "states": [
            {
                "value": "0",
                "valueType": "str",
                "color": "#0a5a78"
            },
            {
                "value": "1",
                "valueType": "str",
                "color": "#575757"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showBorder": false,
        "showGlow": false,
        "x": 1080,
        "y": 1100,
        "wires": []
    },
    {
        "id": "bf699921c67c5efe",
        "type": "ui-led",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Debug Led",
        "group": "1f360b16b32ec829",
        "order": 2,
        "width": 2,
        "height": "1",
        "label": "Debug",
        "labelPlacement": "right",
        "labelAlignment": "flex-start",
        "states": [
            {
                "value": "1",
                "valueType": "num",
                "color": "#0a5a78"
            },
            {
                "value": "0",
                "valueType": "num",
                "color": "#575757"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showBorder": false,
        "showGlow": false,
        "x": 1090,
        "y": 1060,
        "wires": []
    },
    {
        "id": "35633ed2c71b93f1",
        "type": "ui-led",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Heater Led",
        "group": "1f360b16b32ec829",
        "order": 1,
        "width": 2,
        "height": 0,
        "label": "Heater",
        "labelPlacement": "right",
        "labelAlignment": "flex-start",
        "states": [
            {
                "value": "1",
                "valueType": "str",
                "color": "#0a5a78"
            },
            {
                "value": "0",
                "valueType": "str",
                "color": "#575757"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showBorder": false,
        "showGlow": false,
        "x": 1090,
        "y": 980,
        "wires": []
    },
    {
        "id": "0fab20d54678aa7a",
        "type": "ui-text",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "group": "eea751cd59c30bc9",
        "order": 1,
        "width": 2,
        "height": 0,
        "name": "BME Interval fb",
        "label": "BME Interval (s): ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1100,
        "y": 940,
        "wires": []
    },
    {
        "id": "d16999edcbece664",
        "type": "ui-text",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "group": "ddb6dd5038edb54e",
        "order": 2,
        "width": 3,
        "height": 0,
        "name": "ESP (client) IP",
        "label": "ESP (client) IP:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1100,
        "y": 1140,
        "wires": []
    },
    {
        "id": "5edec3db1778913c",
        "type": "change",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "'<div style=\"color: #222; background-color: #2e2; padding: 2rem; border-radius: 0.375rem;\">â Wifi Cleared. Reboot ESP</div>'",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1180,
        "wires": [
            [
                "12022de2a2018bda"
            ]
        ]
    },
    {
        "id": "12022de2a2018bda",
        "type": "ui-notification",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "ui": "77e83d514b9bd6e2",
        "position": "center center",
        "colorDefault": true,
        "color": "#0a5a78",
        "displayTime": "5",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": true,
        "className": "",
        "name": "Wifi Reset",
        "x": 1270,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "10e898ec405b580b",
        "type": "inject",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Trigger on start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 1,
        "topic": "",
        "x": 840,
        "y": 860,
        "wires": [
            [
                "3deaed82819befab"
            ]
        ]
    },
    {
        "id": "3deaed82819befab",
        "type": "function",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Get Local IP",
        "func": "// Get all the network interfaces on the system:\nconst interfaces = os.networkInterfaces();\nlet localIP = '';\n\nconst preferredInterfaces = ['Wi-Fi', 'wlan0', 'eth0', 'Ethernet'];\n\nfor (const name of preferredInterfaces.concat(Object.keys(interfaces))) {\n    const ifaceList = interfaces[name];\n    if (!ifaceList) continue;\n    \n    for (const iface of ifaceList) {\n        if (iface.family === 'IPv4' && !iface.internal) {\n            localIP = iface.address;\n            break;\n        }\n    }\n    if (localIP) break;\n}\n\nmsg.topic = \"localIP\";\nmsg.payload = localIP || \"Not found\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "os",
                "module": "os"
            }
        ],
        "x": 1010,
        "y": 860,
        "wires": [
            [
                "a2e851899c0ee76d"
            ]
        ]
    },
    {
        "id": "a2e851899c0ee76d",
        "type": "ui-text",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "group": "ddb6dd5038edb54e",
        "order": 1,
        "width": 3,
        "height": 0,
        "name": "Host IP",
        "label": "Node Red (host) IP:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1180,
        "y": 860,
        "wires": []
    },
    {
        "id": "0062bdac845f9a42",
        "type": "inject",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Init. Boiler",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 150,
        "y": 1020,
        "wires": [
            [
                "0fc1aea9f3405373"
            ]
        ]
    },
    {
        "id": "58be6794a184cba2",
        "type": "inject",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Init. Debug",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 1160,
        "wires": [
            [
                "9021d18f82f4ac42"
            ]
        ]
    },
    {
        "id": "6ae75497c6b7045c",
        "type": "inject",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Init. LED",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 140,
        "y": 1080,
        "wires": [
            [
                "b8c346de5967093e"
            ]
        ]
    },
    {
        "id": "2212016ba68b6d87",
        "type": "ui-button",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "group": "73528bb91092cced",
        "name": "read BME",
        "label": "Trigger",
        "order": 8,
        "width": 2,
        "height": 0,
        "emulateClick": true,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "read",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "f0ac8ab08c66448a"
            ]
        ]
    },
    {
        "id": "f0ac8ab08c66448a",
        "type": "link out",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "read link out",
        "mode": "link",
        "links": [
            "42457aa4ad095f87"
        ],
        "x": 255,
        "y": 540,
        "wires": []
    },
    {
        "id": "42457aa4ad095f87",
        "type": "link in",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "read in",
        "links": [
            "f0ac8ab08c66448a"
        ],
        "x": 245,
        "y": 800,
        "wires": [
            [
                "1dcf111b2594c8bd"
            ]
        ]
    },
    {
        "id": "4083458ef90c25ae",
        "type": "ui-gauge",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "Gauge SLP",
        "group": "73528bb91092cced",
        "order": 3,
        "width": 2,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "SLP",
        "units": "mbar",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "975",
                "color": "#534f4b"
            },
            {
                "from": "1010",
                "color": "#08a612"
            },
            {
                "from": "1025",
                "color": "#58e2fe"
            }
        ],
        "min": "975",
        "max": "1050",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 770,
        "y": 360,
        "wires": []
    },
    {
        "id": "baf99f2287f0dbb0",
        "type": "ui-gauge",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "Gauge Hum",
        "group": "73528bb91092cced",
        "order": 4,
        "width": 2,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Hum.",
        "units": "%",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#cd3c32"
            },
            {
                "from": "40",
                "color": "#08a612"
            },
            {
                "from": "70",
                "color": "#7ae4ff"
            }
        ],
        "min": "0",
        "max": "100",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 770,
        "y": 180,
        "wires": []
    },
    {
        "id": "b18baec54d569ee2",
        "type": "ui-gauge",
        "z": "4626f4eca8ae462b",
        "g": "21a58cbb662a2d77",
        "name": "Gauge Temp",
        "group": "73528bb91092cced",
        "order": 2,
        "width": 2,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Temp.",
        "units": "ÂºC",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "5",
                "color": "#7ae4ff"
            },
            {
                "from": "19",
                "color": "#08a612"
            },
            {
                "from": "26",
                "color": "#cd3c32"
            }
        ],
        "min": "5",
        "max": "35",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 770,
        "y": 500,
        "wires": []
    },
    {
        "id": "42e0f40e6b94bfcf",
        "type": "mqtt out",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "esp/reboot",
        "topic": "esp/reboot",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f9e276987b2fb1f",
        "x": 510,
        "y": 1220,
        "wires": []
    },
    {
        "id": "9511a550b937db64",
        "type": "inject",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Init. Reboot",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 1220,
        "wires": [
            [
                "50888997091a3ccf"
            ]
        ]
    },
    {
        "id": "50888997091a3ccf",
        "type": "ui-switch",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "Reboot",
        "label": "Reboot",
        "group": "6802e7f370cd4a31",
        "order": 2,
        "width": 2,
        "height": 0,
        "passthru": true,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-left",
        "clickableArea": "switch",
        "onvalue": "0",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "1",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "x": 320,
        "y": 1220,
        "wires": [
            [
                "42e0f40e6b94bfcf"
            ]
        ]
    },
    {
        "id": "268c398ce7d2aedc",
        "type": "mqtt in",
        "z": "4626f4eca8ae462b",
        "d": true,
        "g": "7b0e3269a6233dda",
        "name": "fb/espIP",
        "topic": "fb/espIP",
        "qos": "2",
        "datatype": "auto",
        "broker": "9f9e276987b2fb1f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 660,
        "y": 1440,
        "wires": [
            [
                "e1d37be25fd797d6",
                "ba5383a6dca4fb57"
            ]
        ]
    },
    {
        "id": "1ce6790e56252c04",
        "type": "mqtt in",
        "z": "4626f4eca8ae462b",
        "d": true,
        "g": "7b0e3269a6233dda",
        "name": "fb/debug",
        "topic": "fb/debug",
        "qos": "2",
        "datatype": "auto",
        "broker": "9f9e276987b2fb1f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 660,
        "y": 1560,
        "wires": [
            [
                "e1d37be25fd797d6"
            ]
        ]
    },
    {
        "id": "9b27c9f2292fd667",
        "type": "mqtt in",
        "z": "4626f4eca8ae462b",
        "d": true,
        "g": "7b0e3269a6233dda",
        "name": "heater",
        "topic": "heater",
        "qos": "2",
        "datatype": "auto",
        "broker": "9f9e276987b2fb1f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 650,
        "y": 1620,
        "wires": [
            [
                "e1d37be25fd797d6"
            ]
        ]
    },
    {
        "id": "818252558bc7c823",
        "type": "mqtt in",
        "z": "4626f4eca8ae462b",
        "d": true,
        "g": "7b0e3269a6233dda",
        "name": "boiler",
        "topic": "boiler",
        "qos": "2",
        "datatype": "auto",
        "broker": "9f9e276987b2fb1f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 650,
        "y": 1660,
        "wires": [
            [
                "e1d37be25fd797d6"
            ]
        ]
    },
    {
        "id": "b6de17e1a7f1e628",
        "type": "mqtt in",
        "z": "4626f4eca8ae462b",
        "d": true,
        "g": "7b0e3269a6233dda",
        "name": "interval",
        "topic": "interval",
        "qos": "2",
        "datatype": "auto",
        "broker": "9f9e276987b2fb1f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 650,
        "y": 1720,
        "wires": [
            [
                "e1d37be25fd797d6"
            ]
        ]
    },
    {
        "id": "44e80559e2fe8234",
        "type": "switch",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "interval",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "heater",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "boiler",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "debug",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "led",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "fb/espIP",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "wifi",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1080,
        "wires": [
            [
                "0fab20d54678aa7a"
            ],
            [
                "35633ed2c71b93f1"
            ],
            [
                "10db6128cb5e255a"
            ],
            [
                "bf699921c67c5efe"
            ],
            [
                "7d9bb908da0322fb"
            ],
            [
                "d16999edcbece664"
            ],
            [
                "5edec3db1778913c"
            ],
            [
                "9d2ce34f03259bbf"
            ]
        ]
    },
    {
        "id": "a443770a02d49986",
        "type": "mqtt in",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "fb/+",
        "topic": "fb/+",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9f9e276987b2fb1f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 710,
        "y": 1080,
        "wires": [
            [
                "44e80559e2fe8234",
                "8d829409618a2baf"
            ]
        ]
    },
    {
        "id": "ba5383a6dca4fb57",
        "type": "debug",
        "z": "4626f4eca8ae462b",
        "d": true,
        "g": "7b0e3269a6233dda",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 1340,
        "wires": []
    },
    {
        "id": "8d829409618a2baf",
        "type": "debug",
        "z": "4626f4eca8ae462b",
        "g": "7b0e3269a6233dda",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1180,
        "wires": []
    },
    {
        "id": "9fb18d31c60ab4b8",
        "type": "ui-group",
        "name": "Chart Hum",
        "page": "f244d991d7d0735a",
        "width": 4,
        "height": 1,
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "32d4771e3f2730dd",
        "type": "ui-group",
        "name": "Chart Temp",
        "page": "f244d991d7d0735a",
        "width": 4,
        "height": "4",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "4bad576b391920a8",
        "type": "ui-group",
        "name": "Chart Press",
        "page": "f244d991d7d0735a",
        "width": 4,
        "height": 1,
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "bcbfe66660dcf8c7",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": 8086,
        "protocol": "http",
        "database": "database",
        "name": "Database",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "https://eu-central-1-1.aws.cloud2.influxdata.com",
        "timeout": 10,
        "rejectUnauthorized": true
    },
    {
        "id": "73528bb91092cced",
        "type": "ui-group",
        "name": "Actual Readings",
        "page": "f244d991d7d0735a",
        "width": 4,
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "9f9e276987b2fb1f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6802e7f370cd4a31",
        "type": "ui-group",
        "name": "ESP",
        "page": "c72da1dec48c5176",
        "width": 2,
        "height": 1,
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "eea751cd59c30bc9",
        "type": "ui-group",
        "name": "Thermostat",
        "page": "c72da1dec48c5176",
        "width": 5,
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "deda685155339a23",
        "type": "remote-config",
        "name": "Node-RED UI",
        "host": "localhost",
        "protocol": "http",
        "port": "1880",
        "baseurl": "/dashboard",
        "instancehash": "8rljy0vbe3oeid7vsm3ke10tv3ssc58tjdoho7rqnj3ys2eapuhxl5y7ab1z0u7g",
        "server": "nodered04.remote-red.com",
        "region": "de"
    },
    {
        "id": "ddb6dd5038edb54e",
        "type": "ui-group",
        "name": "Connections",
        "page": "c72da1dec48c5176",
        "width": 5,
        "height": 1,
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "1f360b16b32ec829",
        "type": "ui-group",
        "name": "Feedback LED's",
        "page": "c72da1dec48c5176",
        "width": 2,
        "height": 1,
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "77e83d514b9bd6e2",
        "type": "ui-base",
        "name": "NoderedUI",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": true,
        "headerContent": "page",
        "navigationStyle": "default",
        "titleBarStyle": "default",
        "showReconnectNotification": true,
        "notificationDisplayTime": 1,
        "showDisconnectNotification": true
    },
    {
        "id": "f244d991d7d0735a",
        "type": "ui-page",
        "name": "MQTT BME",
        "ui": "77e83d514b9bd6e2",
        "path": "/MQTT_bme",
        "icon": "home",
        "layout": "grid",
        "theme": "f633910aef2e9d8b",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "c72da1dec48c5176",
        "type": "ui-page",
        "name": "MQTT Console",
        "ui": "77e83d514b9bd6e2",
        "path": "/MQTT_console",
        "icon": "home",
        "layout": "grid",
        "theme": "f633910aef2e9d8b",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 2,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "f633910aef2e9d8b",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#282828",
            "primary": "#0a5a78",
            "bgPage": "#000000",
            "groupBg": "#afafaf",
            "groupOutline": "#0d0d0d"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    }
]